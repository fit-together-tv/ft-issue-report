name: Build
on:
  push:
    branches: [master]
jobs:
  build:
    runs-on: macos-latest
    strategy:
      matrix:
        node-version: [12.x]
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ENVIRONMENT: test
      GOOGLE_OAUTH_CREDENTIALS: ${{ secrets.GOOGLE_OAUTH_CREDENTIALS }}
      GOOGLE_OAUTH_TOKEN: ${{ secrets.GOOGLE_OAUTH_TOKEN }}
      GOOGLE_SERVICE_ACCOUNT_CREDENTIALS: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_CREDENTIALS }}
      PRODUCT: chuongnau
      PUPPETEER_SKIP_DOWNLOAD: true
      WEB_APP_URL: http://localhost:3000
    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Check out chuongnau.
        uses: actions/checkout@v2
        with:
          ref: refs/heads/master
          repository: fit-together-tv/chuongnau
          submodules: "recursive"
          token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
      - name: Get yarn cache directory path.
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn --network-timeout 1000000
      - run: printenv
      - name: Start and wait for web_app.
        run: yarn start:webapp & yarn wait-on http://localhost:3000
      - name: Wait for alpha.
        run: yarn wait-on http://localhost:3001
      - run: yarn --cwd web_app test:e2e
